# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.1.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [4.4.0] - 2025-10-25

### Added

- Added `mail` module.

## [4.3.0] - 2025-10-25

### Added

- Added `di` module.

## [4.2.3] - 2025-10-25

### Added

- Added support for `array` values in the `ObjectValue`.

## [4.2.2] - 2025-10-25

### Added

- Added `URLValue`.
- Added `enum` to possible rules on the `ArrayValue` and `ObjectValue`.

## [4.2.1] - 2025-10-21

### Removed

- After tests on several `Telemetry` implementations and `Subscription` I found that the init method is useless due to errors in many cases where the error was triggered by the import and not the initialization so it's being removed. 

## [4.2.0] - 2025-10-21

### Added

- Added `ConsoleTelemetry` for dev or test environments.

## [4.1.2] - 2025-10-21

### Changed

- Allow any params in the `init` method of the `Telemetry` and `Subscription`.

## [4.1.1] - 2025-10-21

### Added

- Added telemetry module to the main entry point.

## [4.1.0] - 2025-10-21

### Added

- Added `Telemetry`.

## [4.0.0] - 2025-10-21

### Added

- Added `ABAC` support to `RBACPolicy`.

## [3.1.5] - 2025-10-18

### Fixed

- Fixed `greater_than_or_equal` validation in the `FloatValue`.

## [3.1.4] - 2025-10-18

### Added

- Added `converters` module.

## [3.1.3] - 2025-10-18

### Added

- Added support for `meta` field on the body for the `create` method of the `JSONAPIConnector`.

## [3.1.2] - 2025-10-18

### Added

- Added support for arrays in the `create` method of the `JSONAPIConnector`.

## [3.1.1] - 2025-10-16

### Added

- Added `in-memory` implementation to the `state-manager` module.

## [3.1.0] - 2025-10-16

### Added

- Added `pub-sub` module.

## [3.0.0] - 2025-10-15

### Changed

- Update how filters are stored in the `Criteria` to allow multiple filters over one field.

## [2.6.0] - 2025-10-14

### Added

- Added `countBy` to `DAO`.

## [2.5.9] - 2025-10-14

### Fixed

- `JSONAPIErrors` was never thrown in the `JSONAPIConnector` due to a missing `await`.

## [2.5.8] - 2025-10-14

### Fixed

- Remove `Object.freeze` from `IntegerValue` and `FloatValue` to prevent errors when assigning the `attributeName` on subclasses.

## [2.5.7] - 2025-10-13

### Added

- Added `ObjectValue`.

## [2.5.6] - 2025-10-13

### Added

- Added `min` and `max` to `FloatValue`.

## [2.5.5] - 2025-10-13

### Added

- Added `greater_than_or_equal` and `less_than_or_equal` to `rule`.

## [2.5.4] - 2025-10-13

### Added

- Added `rule` function to avoid the use of `const` when defining the schema on the `ArrayValue`.

## [2.5.3] - 2025-10-13

### Added

- Added `ArrayValue` to value-objects.

## [2.5.2] - 2025-10-13

### Changed

- Allow `DateValue` to be optional.

## [2.5.1] - 2025-10-13

### Changed

- `toPrimitives` method from `DomainEvent` now is defined in the abstract class. In future versions the `DomainEventRegistry` will be updated to handle the transformation of values like date/string and preserve it between conversions.

## [2.5.0] - 2025-10-12

### Added

_ Added `event-bus` with `in-memory` implementations.

## [2.4.2] - 2025-10-12

### Fixed

- Add `id` param to `create` method in the `JSONAPIConnector`.

## [2.4.1] - 2025-10-12

### Fixed

- Added missed export for `JSONAPIErrors`.

## [2.4.0] - 2025-10-11

### Changed

- Now the `JSONAPIConnector` throws a `JSONAPIErrors` exception instead of a generic `HTTPException`.

## [2.3.4] - 2025-10-11

### Changed

- Allow partial attributes in the `create` and `update` methods of the `JSONAPIConnector`.

## [2.3.3] - 2025-10-11

### Added

- Added `ValueNotValid` exception.

## [2.3.2] - 2025-10-11

### Added

- Added `NotAuthorized` exception.

## [2.3.1] - 2025-10-11

### Changed

- `userID` now is protected in the `RBACPolicy`.

## [2.3.0] - 2025-10-10

### Added

- Added `RBAC` module.

## [2.2.4] - 2025-10-10

### Changed

- Remove `Optional` param in the `EnumValue`. Instead allow null values in the `allowedTypes` array.

## [2.2.3] - 2025-10-10

### Changed

- Allow `optional` param in the `EnumValue`.

## [2.2.2] - 2025-10-10

### Added

- Added `FloatValue` to value-objects.

## [2.2.1] - 2025-10-10

### Added

- Added `DateValue` to value-objects.

## [2.2.0] - 2025-10-09

### Changed

- Now the `FetchHTTPProvider` returns the body of the request even on errors to handle JSON/API errors better.

## [2.0.1]

### Added

- Added `BooleanValue`.

## [2.0.0]

### Changed

- Rename method `currentUser` to `getCurrentUser` on the `AuthProvider` interface.

## [1.3.2]

### Changed

- Now the `.authenticate` method from `AuthProvider` should return the token to remove responsabilities from it. A `AuthManager` should be implemented instead in case of future needs.

## [1.3.1] - 2025-10-04

### Added

- Added `ValuesNotValid` exception to have a central error for value objects.

## [1.3.0] - 2025-10-04

### Added

- Added `Result` to have more controlled results in application services.

### Fixed

- Added missed exports for `i18n` module. 

## [1.2.3] - 2025-10-03

### Changed

- Added to constructor of the `FetchHTTPProvider` the possibility to receive a function to fetch the `Authorization`.

## [1.2.2] - 2025-10-03

### Added

- Added implementation of the state manager from the session storage.

### Changed

- `FetchHTTPProvider` now supports the `headers` options.

## [1.2.1] - 2025-10-03

### Changed

- `FetchHTTPProvider` now supports the `credentials` options.

## [1.2.0] - 2025-10-02

### Added

- Added `i18n` support via `TranslationResolver`.

## [1.1.5] - 2025-10-01

### Changed

- Now the `BaseModel` is more flexible to avoid typing issues in the `fromPrimitives` method.

## [1.1.4] - 2025-10-01

### Added

- Added support for `CommonJS`.

## [1.1.3] - 2025-10-01

### Added

- Added root entry point. Now you can import everything from `@schorts/shared-kernel` instead of having to choose an specific module. Example:  `@schorts/shared-kernel/auth`.

## [1.1.2] - 2025-09-30

### Changed

- Now the `DAO` actions like `create`, `update` and `delete` can receive a `UnitOfWork`.

## [1.1.1] - 2025-09-30

### Added

- Added `RegisterEntity` decorator to only decorate the entity to add it to the `EntityRegistry`.

## [1.1.0] - 2025-09-30

### Changed

- Now the `ValueObject` for ID property on `Entity` is required.

### Added

- Added `EntityRegistry` to dynamically instantiate entities in the DAO implementation.

## [1.0.5] - 2025-09-30

### Added

- Introduce `DAO` concept for a related package with a `Firestore` implementation.
- Introduce `UnitOfWOrk` concept for a related package with a `Firestore` implementation.

## [1.0.4] - 2025-09-30

### Fixed

- Add `dist` folder to the repo and NPM package.

## [1.0.3] - 2025-09-30

### Added

- This CHANGELOG file to keep track of the relevant changes.

### Changed

- Removed indirect dependencies from the `package.json`.

[1.2.0]: https://github.com/schorts99/shared-kernel/compare/v1.2.4...v1.2.0
[1.1.4]: https://github.com/schorts99/shared-kernel/compare/v1.1.3...v1.1.4
[1.1.3]: https://github.com/schorts99/shared-kernel/compare/v1.1.2...v1.1.3
[1.1.2]: https://github.com/schorts99/shared-kernel/compare/v1.1.1...v1.1.2
[1.1.1]: https://github.com/schorts99/shared-kernel/compare/v1.1.0...v1.1.1
[1.1.0]: https://github.com/schorts99/shared-kernel/compare/v1.0.5...v1.1.0
[1.0.5]: https://github.com/schorts99/shared-kernel/compare/v1.0.4...v0.0.5
[1.0.4]: https://github.com/schorts99/shared-kernel/compare/v1.0.3...v0.0.4
[1.0.3]: https://github.com/schorts99/shared-kernel/releases/tag/v1.0.3
